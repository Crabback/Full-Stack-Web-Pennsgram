{"ast":null,"code":"import _asyncToGenerator from \"/Users/zanemaomac/Desktop/CIS5570/project/project---design-hw1-team_offersoverflow/bestapp666/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport axios from 'axios'; //mockAPI URL \n// const rootURL = \"\";\n//JSON-server URL\n\nvar rootURL = 'http://localhost:8080/Users'; // Sends a Get request to the /Users endpoint\n// returns all the users in the DB\n\nexport var getUsers = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(rootURL));\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function getUsers() {\n    return _ref.apply(this, arguments);\n  };\n}(); // Takes the username of a user as input\n// and sends a Get request to the /user:id endpoint\n// returns the attributes of the user\n\nexport var getUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(username) {\n    var response, fetchedUsername;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"\".concat(rootURL, \"?username=\").concat(username));\n\n          case 3:\n            response = _context2.sent;\n            response.data.forEach(function (element) {\n              fetchedUsername = element.username;\n            });\n            console.log(\"successfully getUser by username: object with username: \".concat(fetchedUsername));\n            return _context2.abrupt(\"return\", response.data);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n\n  return function getUser(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Takes the list of usernames as input\n// and sends a Get request to the /user:id endpoint\n// returns a list of user objects\n\nexport var getUsersAsList = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(usernames) {\n    var userObjects, roster;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            userObjects = [];\n            _context3.next = 4;\n            return getUsers();\n\n          case 4:\n            roster = _context3.sent;\n            roster.forEach(function (element) {\n              if (usernames.includes(element.username)) {\n                userObjects.push(element);\n              }\n            });\n            userObjects.forEach(function (o) {\n              console.log(o.username);\n            });\n            return _context3.abrupt(\"return\", userObjects);\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n\n  return function getUsersAsList(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // Takes a user (without the id) as input\n// and sends a POST request to the /user endpoint\n// returns the attributes of the user with the id\n\nexport var createNewUser = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(userObject) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return axios.post(\"\".concat(rootURL), \"username=\".concat(userObject.username, \"&password=\").concat(userObject.password, \"&followings=\").concat(userObject.followings, \"&posts=\").concat(userObject.posts));\n\n          case 3:\n            response = _context4.sent;\n            console.log(\"username=\".concat(userObject.username, \"&password=\").concat(userObject.password, \"&followings=\").concat(userObject.followings, \"&posts=\").concat(userObject.posts));\n            return _context4.abrupt(\"return\", response.data);\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(_context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 8]]);\n  }));\n\n  return function createNewUser(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","rootURL","getUsers","get","response","data","console","error","getUser","username","forEach","element","fetchedUsername","log","getUsersAsList","usernames","userObjects","roster","includes","push","o","createNewUser","userObject","post","password","followings","posts"],"sources":["/Users/zanemaomac/Desktop/CIS5570/project/project---design-hw1-team_offersoverflow/bestapp666/client/src/api/mock_api.js"],"sourcesContent":["\nimport axios from 'axios';\n\n//mockAPI URL \n// const rootURL = \"\";\n//JSON-server URL\nconst rootURL ='http://localhost:8080/Users';\n// Sends a Get request to the /Users endpoint\n// returns all the users in the DB\nexport const getUsers = async () =>{\n    try{\n            const response = await axios.get(`${rootURL}`);\n            return response.data;\n            // the data is stored in the mockData\n            // field of the response\n    }\n    catch(err){\n        console.error(err);\n\n    }\n}\n\n// Takes the username of a user as input\n// and sends a Get request to the /user:id endpoint\n// returns the attributes of the user\nexport const getUser = async (username) =>{\n    try{    \n            const response = await axios.get(`${rootURL}?username=${username}`);\n            //get the fetched data's username\n            let fetchedUsername;\n            response.data.forEach(element => {\n                fetchedUsername = element.username;\n            });\n            console.log(`successfully getUser by username: object with username: ${fetchedUsername}`);\n            return response.data;\n    }\n    catch(err){\n        console.error(err);\n    }\n}\n\n// Takes the list of usernames as input\n// and sends a Get request to the /user:id endpoint\n// returns a list of user objects\nexport const getUsersAsList = async (usernames) =>{\n    try{    \n            const userObjects = [];\n            const roster = await getUsers(); \n            roster.forEach((element) => {\n                if(usernames.includes(element.username)){\n                    userObjects.push(element);\n                }\n            })\n            userObjects.forEach((o)=>{console.log(o.username);})\n\n            return userObjects;\n    }\n    catch(err){\n        console.error(err);\n    }\n}\n\n\n// Takes a user (without the id) as input\n// and sends a POST request to the /user endpoint\n// returns the attributes of the user with the id\nexport const createNewUser = async (userObject) =>{\n    try{    \n            const response = await axios.post(`${rootURL}`,\n            `username=${userObject.username}&password=${userObject.password}&followings=${userObject.followings}&posts=${userObject.posts}`);\n            console.log(`username=${userObject.username}&password=${userObject.password}&followings=${userObject.followings}&posts=${userObject.posts}`);\n            return response.data; \n            // return the data with the id of the user\n    }\n    catch(err){\n        console.error(err);\n    }\n}"],"mappings":";;+CACA,oJ;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AACA,IAAMC,OAAO,GAAE,6BAAf,C,CACA;AACA;;AACA,OAAO,IAAMC,QAAQ;EAAA,sEAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEWF,KAAK,CAACG,GAAN,WAAaF,OAAb,EAFX;;UAAA;YAENG,QAFM;YAAA,iCAGLA,QAAQ,CAACC,IAHJ;;UAAA;YAAA;YAAA;YAQhBC,OAAO,CAACC,KAAR;;UARgB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAARL,QAAQ;IAAA;EAAA;AAAA,GAAd,C,CAaP;AACA;AACA;;AACA,OAAO,IAAMM,OAAO;EAAA,uEAAG,kBAAOC,QAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEYT,KAAK,CAACG,GAAN,WAAaF,OAAb,uBAAiCQ,QAAjC,EAFZ;;UAAA;YAELL,QAFK;YAKXA,QAAQ,CAACC,IAAT,CAAcK,OAAd,CAAsB,UAAAC,OAAO,EAAI;cAC7BC,eAAe,GAAGD,OAAO,CAACF,QAA1B;YACH,CAFD;YAGAH,OAAO,CAACO,GAAR,mEAAuED,eAAvE;YARW,kCASJR,QAAQ,CAACC,IATL;;UAAA;YAAA;YAAA;YAYfC,OAAO,CAACC,KAAR;;UAZe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAPC,OAAO;IAAA;EAAA;AAAA,GAAb,C,CAgBP;AACA;AACA;;AACA,OAAO,IAAMM,cAAc;EAAA,uEAAG,kBAAOC,SAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAEZC,WAFY,GAEE,EAFF;YAAA;YAAA,OAGGd,QAAQ,EAHX;;UAAA;YAGZe,MAHY;YAIlBA,MAAM,CAACP,OAAP,CAAe,UAACC,OAAD,EAAa;cACxB,IAAGI,SAAS,CAACG,QAAV,CAAmBP,OAAO,CAACF,QAA3B,CAAH,EAAwC;gBACpCO,WAAW,CAACG,IAAZ,CAAiBR,OAAjB;cACH;YACJ,CAJD;YAKAK,WAAW,CAACN,OAAZ,CAAoB,UAACU,CAAD,EAAK;cAACd,OAAO,CAACO,GAAR,CAAYO,CAAC,CAACX,QAAd;YAAyB,CAAnD;YATkB,kCAWXO,WAXW;;UAAA;YAAA;YAAA;YActBV,OAAO,CAACC,KAAR;;UAdsB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAdO,cAAc;IAAA;EAAA;AAAA,GAApB,C,CAmBP;AACA;AACA;;AACA,OAAO,IAAMO,aAAa;EAAA,uEAAG,kBAAOC,UAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEMtB,KAAK,CAACuB,IAAN,WAActB,OAAd,sBACXqB,UAAU,CAACb,QADA,uBACqBa,UAAU,CAACE,QADhC,yBACuDF,UAAU,CAACG,UADlE,oBACsFH,UAAU,CAACI,KADjG,EAFN;;UAAA;YAEXtB,QAFW;YAIjBE,OAAO,CAACO,GAAR,oBAAwBS,UAAU,CAACb,QAAnC,uBAAwDa,UAAU,CAACE,QAAnE,yBAA0FF,UAAU,CAACG,UAArG,oBAAyHH,UAAU,CAACI,KAApI;YAJiB,kCAKVtB,QAAQ,CAACC,IALC;;UAAA;YAAA;YAAA;YASrBC,OAAO,CAACC,KAAR;;UATqB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAbc,aAAa;IAAA;EAAA;AAAA,GAAnB"},"metadata":{},"sourceType":"module"}