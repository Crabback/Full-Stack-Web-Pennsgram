{"ast":null,"code":"import axios from 'axios';\nconst getUsers = async () => {\n  var res = await axios.get(`http://localhost:8080/users`);\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst getUser = async username => {\n  var res = await axios.get(`http://localhost:8080/user/${username}`);\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst createNewUser = async userObject => {\n  var res = await axios.post(`http://localhost:8080/user/`, {\n    \"userObject\": userObject\n  });\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst followUser = async (username1, username2) => {\n  var res = await axios.put(`http://localhost:8080/follow`, {\n    \"username1\": username1,\n    \"username2\": username2\n  });\n  return res.data.data;\n};\nconst unfollowUser = async (username1, username2) => {\n  var res = await axios.put(`http://localhost:8080/unfollow`, {\n    \"username1\": username1,\n    \"username2\": username2\n  });\n  return res.data.data;\n};\nconst getPosts = async () => {\n  var res = await axios.get(`http://localhost:8080/posts`);\n  return res.data.data;\n};\nconst getPost = async postId => {\n  var res = await axios.get(`http://localhost:8080/post/${postId}`);\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst createNewPost = async (username, postObject) => {\n  var res = await axios.post(`http://localhost:8080/post/`, {\n    \"username\": username,\n    \"postObject\": postObject\n  });\n  return res.data.data;\n};\nconst deletePost = async postId => {\n  var res = await axios.delete(`http://localhost:8080/post/${postId}`);\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst updatePost = async (postId, newImage, newDescription) => {\n  var res = await axios.put(`http://localhost:8080/post/${postId}`, {\n    \"newImage\": newImage,\n    \"newDescription\": newDescription\n  });\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst likePost = async (username, postId) => {\n  var res = await axios.put(`http://localhost:8080/post/${postId}/like`, {\n    \"username\": username\n  });\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst unlikePost = async (username, postId) => {\n  var res = await axios.put(`http://localhost:8080/post/${postId}/unlike`, {\n    \"username\": username\n  });\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst getComments = async postId => {\n  var res = await axios.get(`http://localhost:8080/post/${postId}/comments`);\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst addComment = async (postId, commentObject) => {\n  var res = await axios.post(`http://localhost:8080/post/${postId}/comments`, {\n    \"commentObject\": commentObject\n  });\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst updateComment = async (postId, author, oldContent, newContent, newMention) => {\n  console.log(\"(postId, author, oldContent, newContent, newMention) = \", `'${postId}' '${author}' '${oldContent}' '${newContent}' '${newMention}'`);\n  var res = await axios.put(`http://localhost:8080/post/${postId}/comments`, {\n    \"author\": author,\n    \"oldContent\": oldContent,\n    \"newContent\": newContent,\n    \"newMention\": newMention\n  });\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst deleteComment = async (postId, author, content) => {\n  console.log(`fetcher.js: '${postId}', '${author}', '${content}'`);\n  var res = await axios({\n    method: 'delete',\n    url: `http://localhost:8080/post/${postId}/comments`,\n    data: {\n      \"author\": author,\n      \"content\": content\n    }\n  });\n  console.log(res.status + \" \" + res.statusText);\n  return res.data.data;\n};\nconst getUsersAsList = async usernames => {\n  const res = await axios.put(`http://localhost:8080/userlist`, {\n    usernames: usernames\n  });\n  return res.data.data;\n};\nconst getLastestPostOfAUser = async username => {\n  var res = await axios.get(`http://localhost:8080/user/${username}/latest`);\n  return res.data.data;\n};\nexport { getUsers, getUser, createNewUser, followUser, unfollowUser, getPosts, getPost, deletePost, updatePost, likePost, unlikePost, getComments, addComment, updateComment, deleteComment, getUsersAsList, createNewPost, getLastestPostOfAUser };","map":{"version":3,"names":["axios","getUsers","res","get","console","log","status","statusText","data","getUser","username","createNewUser","userObject","post","followUser","username1","username2","put","unfollowUser","getPosts","getPost","postId","createNewPost","postObject","deletePost","delete","updatePost","newImage","newDescription","likePost","unlikePost","getComments","addComment","commentObject","updateComment","author","oldContent","newContent","newMention","deleteComment","content","method","url","getUsersAsList","usernames","getLastestPostOfAUser"],"sources":["/Users/zanemaomac/Desktop/CIS5570/project/project---design-hw1-team_offersoverflow/bestapp666/frontend/src/fetcher.js"],"sourcesContent":["import axios from 'axios';\n\nconst getUsers = async () => {\n    var res = await axios.get(`http://localhost:8080/users`);\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst getUser = async (username) => {\n    var res = await axios.get(`http://localhost:8080/user/${username}`);\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst createNewUser = async (userObject) => {\n    var res = await axios.post(`http://localhost:8080/user/`, {\n        \"userObject\": userObject\n    });\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst followUser = async (username1, username2) => {\n    var res = await axios.put(`http://localhost:8080/follow`, {\n        \"username1\": username1, \n        \"username2\": username2\n    });\n    return res.data.data;\n}\n\nconst unfollowUser = async (username1, username2) => {\n    var res = await axios.put(`http://localhost:8080/unfollow`, {\n        \"username1\": username1, \n        \"username2\": username2\n    });\n    return res.data.data;\n}\n\nconst getPosts = async () => {\n    var res = await axios.get(`http://localhost:8080/posts`);\n    return res.data.data;\n}\n\nconst getPost = async (postId) => {\n    var res = await axios.get(`http://localhost:8080/post/${postId}`);\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst createNewPost = async (username, postObject) => {\n    var res = await axios.post(`http://localhost:8080/post/`,\n    {\n        \"username\": username, \n        \"postObject\": postObject\n    }\n    );\n    return res.data.data;\n}\n\nconst deletePost = async (postId) => {\n    var res = await axios.delete(`http://localhost:8080/post/${postId}`);\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst updatePost = async (postId, newImage, newDescription) => {\n    var res = await axios.put(`http://localhost:8080/post/${postId}`,\n    {\n        \"newImage\": newImage,\n        \"newDescription\": newDescription\n    }\n    );\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst likePost = async (username, postId) => {\n    var res = await axios.put(`http://localhost:8080/post/${postId}/like`,\n    {\n        \"username\": username,\n    }\n    );\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst unlikePost = async (username,  postId) => {\n    var res = await axios.put(`http://localhost:8080/post/${postId}/unlike`,\n    {\n        \"username\": username,\n    }\n    );\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst getComments = async (postId) => {\n    var res = await axios.get(`http://localhost:8080/post/${postId}/comments`);\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst addComment = async (postId, commentObject) => {\n    var res = await axios.post(`http://localhost:8080/post/${postId}/comments`,\n    {\n        \"commentObject\": commentObject\n    }\n    );\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst updateComment = async (postId, author, oldContent, newContent, newMention) => {\n    console.log(\"(postId, author, oldContent, newContent, newMention) = \", `'${postId}' '${author}' '${oldContent}' '${newContent}' '${newMention}'`);\n    var res = await axios.put(`http://localhost:8080/post/${postId}/comments`,\n    {\n        \"author\": author,\n        \"oldContent\": oldContent,\n        \"newContent\": newContent,\n        \"newMention\": newMention\n    }\n    );\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst deleteComment = async (postId, author, content) => {\n    console.log(`fetcher.js: '${postId}', '${author}', '${content}'`);\n\n    var res = await axios(\n    {   \n        method: 'delete', \n        url: `http://localhost:8080/post/${postId}/comments`,\n        data: {\n            \"author\" : author,\n            \"content\" : content\n        }\n    }\n    );\n    console.log(res.status + \" \" + res.statusText);\n    return res.data.data;\n}\n\nconst getUsersAsList = async (usernames) =>{\n    const res = await axios.put(`http://localhost:8080/userlist`,\n    {\n        usernames: usernames\n    });\n    return res.data.data;\n}\n\nconst getLastestPostOfAUser = async (username) =>{\n    var res = await axios.get(`http://localhost:8080/user/${username}/latest`);\n    return res.data.data;\n}\n\nexport {\n    getUsers,\n    getUser,\n    createNewUser,\n    followUser,\n    unfollowUser,\n    getPosts,\n    getPost,\n    deletePost,\n    updatePost,\n    likePost,\n    unlikePost,\n    getComments,\n    addComment,\n    updateComment,\n    deleteComment,\n    getUsersAsList,\n    createNewPost,\n    getLastestPostOfAUser\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}