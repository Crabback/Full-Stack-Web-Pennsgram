{"ast":null,"code":"var _jsxFileName = \"/Users/zanemaomac/Desktop/CIS5570/project/project---design-hw1-team_offersoverflow/WEB_APP/frontend/src/pages/FeedPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CardFeedPage } from '../components/CardFeedPage';\nimport Stack from 'react-bootstrap/Stack';\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { selectCurrentUser } from './UserPage/currentUserSlice';\nimport { getUsersAsList, getLastestPostOfAUser, getPost, getUser, getUserFollowingSuggestion, getTotalFollowingPosts } from \"../fetcher\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FeedPage() {\n  _s();\n  const dispatch = useDispatch();\n  // get followings of the current user\n  const stateCurrentUser = useSelector(selectCurrentUser);\n  let followingsUsernames = stateCurrentUser.followings;\n  const [feedPostOfUser, setFeedPostOfUser] = useState([]);\n  const [popularPostsNearby, setPopularPostsNearby] = useState([]);\n  const [editedAndRefreshCards, setEditedAndRefreshCards] = useState(true); //the value of this switch doesn't matter only the change matter for triggering useEffect\n  const [hearFromDeleteComment, setHearFromDeleteComment] = useState(false); //the request for refreshing comment list from PopUp window, trigger value doesnt matter\n  const [visibility, setVisibility] = useState(false);\n  const [postBeingEdited, setPostBeingEdited] = useState({});\n  const [suggestions, setSuggestions] = useState([]);\n  const [numPosts, setnumPosts] = useState(0);\n  useEffect(() => {\n    getUserFollowingSuggestion(stateCurrentUser.username).then(value => {\n      setSuggestions(value);\n      console.log(suggestions);\n    });\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      const userObjects = await getUsersAsList(followingsUsernames);\n\n      //remove user who has no post\n      const userObjectsFiltered = userObjects.filter(object => {\n        return object.posts.length !== 0;\n      });\n\n      // map the object to it's latest post\n      const followingsLatestPost = await Promise.all(userObjectsFiltered.map(async o => {\n        //return the largest(most recent) ID\n        let postObject = await getLastestPostOfAUser(o.username);\n        return postObject;\n      }));\n      setFeedPostOfUser(followingsLatestPost);\n      const numPost = await getTotalFollowingPosts(followingsUsernames);\n      setnumPosts(numPost);\n      // fetch popular post\n      // get the popular post\n    }\n\n    setInterval(() => {\n      fetchData();\n      console.log(numPosts);\n    }, 5000);\n    try {\n      fetchData();\n      console.log(numPosts);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [editedAndRefreshCards, hearFromDeleteComment, numPosts]); //adding empty dependency making sure useEffect only run once after each render\n\n  const cards = (feedPostOfUser.length === 0 ? popularPostsNearby : feedPostOfUser).map(p => /*#__PURE__*/_jsxDEV(CardFeedPage, {\n    post: p,\n    username: stateCurrentUser.username,\n    oldEditedAndRefreshCards: editedAndRefreshCards,\n    allDisplayedPosts: feedPostOfUser,\n    setEditedAndRefreshCards: setEditedAndRefreshCards,\n    setCommentState: setFeedPostOfUser,\n    setPostBeingEdited: setPostBeingEdited,\n    setVisibility: setVisibility\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this));\n  let userlist = suggestions.map(p => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    as: \"li\",\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/user/\" + p,\n      className: \"button_text\",\n      children: p\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          paddingLeft: \"10%\"\n        },\n        children: [stateCurrentUser.username === \"NOT_A_USER\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Please log in to see the activity feed.\"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Stack, {\n          gap: 2,\n          className: \"col-md-6 mx-auto\",\n          children: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          paddingLeft: \"20%\",\n          paddingRight: \"10%\",\n          paddingBottom: \"2rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            paddingBottom: \"2rem\"\n          },\n          children: \" Recommended Users to Follow \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          as: \"ul\",\n          defaultActiveKey: \"#link1\",\n          children: userlist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(FeedPage, \"6rlPA3vdrJOBQfy34LCzfb9ysU8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useState","useEffect","CardFeedPage","Stack","NavLink","useSelector","useDispatch","ListGroup","selectCurrentUser","getUsersAsList","getLastestPostOfAUser","getPost","getUser","getUserFollowingSuggestion","getTotalFollowingPosts","Row","Col","FeedPage","dispatch","stateCurrentUser","followingsUsernames","followings","feedPostOfUser","setFeedPostOfUser","popularPostsNearby","setPopularPostsNearby","editedAndRefreshCards","setEditedAndRefreshCards","hearFromDeleteComment","setHearFromDeleteComment","visibility","setVisibility","postBeingEdited","setPostBeingEdited","suggestions","setSuggestions","numPosts","setnumPosts","username","then","value","console","log","fetchData","userObjects","userObjectsFiltered","filter","object","posts","length","followingsLatestPost","Promise","all","map","o","postObject","numPost","setInterval","err","error","cards","p","userlist","paddingLeft","paddingRight","paddingBottom"],"sources":["/Users/zanemaomac/Desktop/CIS5570/project/project---design-hw1-team_offersoverflow/WEB_APP/frontend/src/pages/FeedPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {CardFeedPage} from '../components/CardFeedPage';\nimport Stack from 'react-bootstrap/Stack';\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport {selectCurrentUser} from './UserPage/currentUserSlice'\nimport {getUsersAsList, getLastestPostOfAUser, getPost, getUser, getUserFollowingSuggestion, getTotalFollowingPosts } from \"../fetcher\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function FeedPage() {\n  const dispatch = useDispatch();\n// get followings of the current user\n  const stateCurrentUser = useSelector(selectCurrentUser);\n  let followingsUsernames = stateCurrentUser.followings;\n  const [feedPostOfUser, setFeedPostOfUser] = useState([]);\n  const [popularPostsNearby, setPopularPostsNearby] = useState([]);\n  const [editedAndRefreshCards, setEditedAndRefreshCards] = useState(true); //the value of this switch doesn't matter only the change matter for triggering useEffect\n  const [hearFromDeleteComment, setHearFromDeleteComment] = useState(false); //the request for refreshing comment list from PopUp window, trigger value doesnt matter\n  const [visibility, setVisibility] = useState(false);\n  const [postBeingEdited, setPostBeingEdited] = useState({});\n  const [suggestions, setSuggestions] = useState([]);\n  const [numPosts, setnumPosts] = useState(0);\n  \n    useEffect(() => {\n      getUserFollowingSuggestion(stateCurrentUser.username)\n      .then( value => {\n        setSuggestions(value);\n        console.log(suggestions)\n      });\n    }, []);\n    useEffect(() => {\n      async function fetchData() {\n        const userObjects = await getUsersAsList(followingsUsernames);\n        \n        //remove user who has no post\n        const userObjectsFiltered = userObjects.filter((object)=>{\n            return object.posts.length !==0;\n          });\n\n        // map the object to it's latest post\n        const followingsLatestPost = await Promise.all(userObjectsFiltered.map(async (o) => {\n          //return the largest(most recent) ID\n          let postObject = await getLastestPostOfAUser(o.username);\n          return postObject;\n        }))\n        setFeedPostOfUser(followingsLatestPost);\n        const numPost = await getTotalFollowingPosts(followingsUsernames);\n        setnumPosts(numPost);\n        // fetch popular post\n        // get the popular post\n      }\n      setInterval(() => {\n        fetchData();\n        console.log(numPosts);\n      }, 5000);\n      try{\n        fetchData();\n        console.log(numPosts);\n      }\n      catch(err){\n          console.error(err);\n      }\n    }, [editedAndRefreshCards, hearFromDeleteComment,numPosts]); //adding empty dependency making sure useEffect only run once after each render\n\n  \n  \n  \n  const cards = ((feedPostOfUser.length===0) ? popularPostsNearby:feedPostOfUser).map((p) => (\n    <CardFeedPage post={p} username={stateCurrentUser.username} oldEditedAndRefreshCards={editedAndRefreshCards} allDisplayedPosts={feedPostOfUser}\n    setEditedAndRefreshCards = {setEditedAndRefreshCards} setCommentState={setFeedPostOfUser} \n    setPostBeingEdited = {setPostBeingEdited} setVisibility= {setVisibility}/>\n  ))\n\n  let userlist =  suggestions.map((p) => (\n    <ListGroup.Item as=\"li\" >\n      <NavLink to={\"/user/\"+p} className=\"button_text\">\n        {p}\n      </NavLink>\n    </ListGroup.Item>\n  ))\n\n  return (\n    <div className='background'>\n    \n    <Row>\n      <Col style={{paddingLeft: \"10%\"}}>\n        {stateCurrentUser.username===\"NOT_A_USER\" && <>Please log in to see the activity feed.</>}\n        <Stack gap={2} className=\"col-md-6 mx-auto\">\n          {cards}\n        </Stack>\n      </Col>\n\n      <Col style={{paddingLeft: \"20%\", paddingRight: \"10%\", paddingBottom: \"2rem\"}}>\n        <h4 style={{paddingBottom: \"2rem\"}}> Recommended Users to Follow </h4>\n        <ListGroup as=\"ul\" defaultActiveKey=\"#link1\">\n          {userlist}\n        </ListGroup>\n      </Col>\n\n    </Row>\n    \n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}