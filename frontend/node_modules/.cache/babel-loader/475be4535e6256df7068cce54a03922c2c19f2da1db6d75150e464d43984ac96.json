{"ast":null,"code":"var _jsxFileName = \"/Users/zanemaomac/Desktop/CIS5570/project/project---design-hw1-team_offersoverflow/bestapp666/frontend/src/pages/UserPage/User.js\",\n  _s = $RefreshSig$();\nimport \"../../Styles.css\";\nimport { getPost } from \"../../api/mock_api\";\nimport React, { useState, useEffect } from \"react\";\nimport { Footer } from \"../../components/Footer\";\nimport ReactRoundedImage from \"react-rounded-image\";\nimport { CardCustomedUserPage } from '../../components/CardUserPage';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { selectCurrentUser, updateCurrentUser } from './currentUserSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser, getPosts, followUser, unfollowUser } from \"../../fetcher\";\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport PostPopUp from './PostPopUp.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function User() {\n  _s();\n  const dispatch = useDispatch();\n  // the logged-in user who is browsing page (self)\n  const stateCurrentUser = useSelector(selectCurrentUser);\n  const [thisUser, setThisUser] = useState(stateCurrentUser);\n  const [allPosts, setThisUserPosts] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [checked, setChecked] = useState(true);\n  const [text, setText] = useState(\"Follow\");\n  const [isFollowing, setIsFollowing] = useState(true);\n  let {\n    username\n  } = useParams();\n  // action trigger states\n  const [editedAndRefreshCards, setEditedAndRefreshCards] = useState(true); //the value of this switch doesn't matter only the change matter for triggering useEffect\n  const [hearFromDeleteComment, setHearFromDeleteComment] = useState(false); //the request for refreshing comment list from PopUp window, trigger value doesnt matter\n  // states for post edit pop up\n  const [visibility, setVisibility] = useState(false);\n  const [postBeingEdited, setPostBeingEdited] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      //verification username exist or not\n      let output1 = await getUser(username);\n      let output2 = await getPosts();\n      //get the user object\n      if (output1 === undefined) {\n        alert(\"User Not Found.\");\n      } else {\n        setThisUser(output1);\n        setThisUserPosts(output2); //这里不科学set this user posts 为所有的post\n      }\n    }\n\n    try {\n      fetchData();\n    } catch (err) {\n      console.error(err);\n    }\n    if (stateCurrentUser.followings.includes(username)) {\n      setText(\"Following\");\n      setChecked(false);\n      setOffset(0);\n      setIsFollowing(true);\n    } else {\n      setText(\"Follow\");\n      setChecked(true);\n      setOffset(0);\n      setIsFollowing(false);\n    }\n\n    // if hearFromDeleteComment: action -> setPostBeingEdited\n    async function updatePostBeingEdited() {\n      //refresh the same post with comment deleted\n      console.log(\"before postBeingEdited.id\", postBeingEdited.id);\n      const updatedPost = await getPost(JSON.stringify(postBeingEdited) !== '{}' ? postBeingEdited.id : -1);\n      setPostBeingEdited(updatedPost);\n      console.log(\"after postBeingEdited.id\", postBeingEdited.id);\n    }\n    try {\n      if (JSON.stringify(postBeingEdited) !== '{}' && postBeingEdited) {\n        updatePostBeingEdited();\n      }\n      ;\n    } catch (err) {\n      console.log(err);\n      console.log(\"Error: User: useEffect: updatePostBeingEdited\");\n    }\n  }, [username, editedAndRefreshCards, hearFromDeleteComment]); //adding dependency making sure useEffect only run once after each render\n\n  const popupCloseHandler = () => {\n    setVisibility(false);\n  };\n  const posts = (thisUser.posts.length === 0 ? [-1] : thisUser.posts).map(p => /*#__PURE__*/_jsxDEV(CardCustomedUserPage, {\n    username: stateCurrentUser.username,\n    post: allPosts.filter(n => n.id === p)[0],\n    setEditedAndRefreshCards: setEditedAndRefreshCards,\n    oldEditedAndRefreshCards: editedAndRefreshCards,\n    setPostBeingEdited: setPostBeingEdited,\n    setVisibility: setVisibility\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this));\n  function ActionButton() {\n    // everything except the API call is visual only\n    async function handleFollow(e) {\n      setChecked(e.currentTarget.checked);\n      if (text === \"Follow\") {\n        setText(\"Following\");\n        if (isFollowing) {\n          setOffset(0);\n        } else {\n          setOffset(1);\n        }\n        const updatedUser = await followUser(stateCurrentUser.username, username);\n        dispatch(updateCurrentUser(updatedUser));\n      } else {\n        setText(\"Follow\");\n        if (isFollowing) {\n          setOffset(-1);\n        } else {\n          setOffset(0);\n        }\n        const updatedUser = await unfollowUser(stateCurrentUser.username, username);\n        dispatch(updateCurrentUser(updatedUser));\n      }\n    }\n    if (username === stateCurrentUser.username) {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/upload\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \" New Post \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this);\n    } else if (stateCurrentUser.username !== \"NOT_A_USER\") {\n      return /*#__PURE__*/_jsxDEV(ToggleButton, {\n        className: \"mb-2\",\n        id: \"toggle-check\",\n        type: \"checkbox\",\n        variant: \"outline-primary\",\n        \"data-testid\": \"followingButton\",\n        checked: checked,\n        onChange: handleFollow,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \" Login to Follow \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactRoundedImage, {\n        image: thisUser.avatar,\n        roundedColor: \"white\",\n        imageWidth: \"150\",\n        imageHeight: \"150\",\n        roundedSize: \"10\",\n        borderRadius: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: \"1rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fw-bold\",\n        \"data-testid\": \"username\",\n        children: [\" \", thisUser.username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/followinglist/\" + thisUser.username,\n            style: {\n              textDecoration: \"none\"\n            },\n            children: [\" \", thisUser.followings.length, \" Following \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/followerlist/\" + thisUser.username,\n            style: {\n              textDecoration: \"none\"\n            },\n            children: [\" \", thisUser.followers.length + offset, \" Followers \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          span: 4,\n          offset: 11\n        },\n        style: {\n          paddingBottom: '2rem',\n          paddingTop: '2rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(ActionButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 15,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [\" \", posts, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostPopUp, {\n      className: \"popWindow\",\n      post: postBeingEdited,\n      setEditedAndRefreshCards: setEditedAndRefreshCards,\n      oldEditedAndRefreshCards: editedAndRefreshCards,\n      setHearFromDeleteComment: setHearFromDeleteComment,\n      oldHearFromDeleteComment: hearFromDeleteComment,\n      setPostBeingEdited: setPostBeingEdited,\n      onClose: popupCloseHandler,\n      show: visibility,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello This is Popup Content Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This is my lorem ipsum text here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"aFup9s4LmbRNcu11y869583e7NM=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n_c = User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["getPost","React","useState","useEffect","Footer","ReactRoundedImage","CardCustomedUserPage","Row","Col","Container","Button","NavLink","useParams","selectCurrentUser","updateCurrentUser","useSelector","useDispatch","getUser","getPosts","followUser","unfollowUser","ToggleButton","PostPopUp","User","dispatch","stateCurrentUser","thisUser","setThisUser","allPosts","setThisUserPosts","offset","setOffset","checked","setChecked","text","setText","isFollowing","setIsFollowing","username","editedAndRefreshCards","setEditedAndRefreshCards","hearFromDeleteComment","setHearFromDeleteComment","visibility","setVisibility","postBeingEdited","setPostBeingEdited","fetchData","output1","output2","undefined","alert","err","console","error","followings","includes","updatePostBeingEdited","log","id","updatedPost","JSON","stringify","popupCloseHandler","posts","length","map","p","filter","n","ActionButton","handleFollow","e","currentTarget","updatedUser","display","justifyContent","avatar","paddingTop","alignItems","textDecoration","followers","span","paddingBottom","paddingLeft"],"sources":["/Users/zanemaomac/Desktop/CIS5570/project/project---design-hw1-team_offersoverflow/bestapp666/frontend/src/pages/UserPage/User.js"],"sourcesContent":["import \"../../Styles.css\";\nimport { getPost } from \"../../api/mock_api\";\nimport React, { useState, useEffect } from \"react\";\nimport { Footer } from \"../../components/Footer\";\nimport ReactRoundedImage from \"react-rounded-image\";\nimport {CardCustomedUserPage} from '../../components/CardUserPage';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink, useParams} from \"react-router-dom\";\nimport {selectCurrentUser, updateCurrentUser} from './currentUserSlice'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUser, getPosts, followUser, unfollowUser} from \"../../fetcher\";\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport PostPopUp from './PostPopUp.js'\n\nexport default function User() {\n    \n    const dispatch = useDispatch();\n    // the logged-in user who is browsing page (self)\n    const stateCurrentUser = useSelector(selectCurrentUser);\n    const [thisUser, setThisUser] = useState(stateCurrentUser);\n    const [allPosts, setThisUserPosts] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [checked, setChecked] = useState(true);\n    const [text, setText] = useState(\"Follow\");\n    const [isFollowing, setIsFollowing] = useState(true);\n    let { username } = useParams();\n    // action trigger states\n    const [editedAndRefreshCards, setEditedAndRefreshCards] = useState(true); //the value of this switch doesn't matter only the change matter for triggering useEffect\n    const [hearFromDeleteComment, setHearFromDeleteComment] = useState(false); //the request for refreshing comment list from PopUp window, trigger value doesnt matter\n    // states for post edit pop up\n    const [visibility, setVisibility] = useState(false);\n    const [postBeingEdited, setPostBeingEdited] = useState({});\n\n    useEffect(() => {\n      async function fetchData() {\n        //verification username exist or not\n        let output1 = await getUser(username);\n        let output2 = await getPosts();\n         //get the user object\n        if(output1 === undefined){\n          alert(\"User Not Found.\")\n        }else{\n          setThisUser(output1);\n          setThisUserPosts(output2); //这里不科学set this user posts 为所有的post\n        }\n      }\n      try{fetchData();}\n      catch(err){\n        console.error(err);}\n        \n      if (stateCurrentUser.followings.includes(username)){\n        setText(\"Following\");\n        setChecked(false);\n        setOffset(0);\n        setIsFollowing(true);\n      }else{\n        setText(\"Follow\");\n        setChecked(true);\n        setOffset(0);\n        setIsFollowing(false);\n      }\n\n      // if hearFromDeleteComment: action -> setPostBeingEdited\n      async function updatePostBeingEdited(){\n          //refresh the same post with comment deleted\n            console.log(\"before postBeingEdited.id\", postBeingEdited.id);\n            const updatedPost = await getPost(JSON.stringify(postBeingEdited)!== '{}'? postBeingEdited.id : -1);\n            setPostBeingEdited(updatedPost);\n            console.log(\"after postBeingEdited.id\", postBeingEdited.id);\n\n      }\n      try{\n        if(JSON.stringify(postBeingEdited)!== '{}' && postBeingEdited) {updatePostBeingEdited()};\n      }catch(err){\n        console.log(err);\n        console.log(\"Error: User: useEffect: updatePostBeingEdited\");\n      }\n\n    }, [username, editedAndRefreshCards, hearFromDeleteComment]); //adding dependency making sure useEffect only run once after each render\n\n\n    const popupCloseHandler = () => {\n      setVisibility(false);\n    };\n\n    const posts = ((thisUser.posts.length===0)?  [-1] : thisUser.posts).map((p)=>(\n      <CardCustomedUserPage username={stateCurrentUser.username} post={allPosts.filter(n => n.id === p)[0]} \n                            setEditedAndRefreshCards = {setEditedAndRefreshCards} oldEditedAndRefreshCards={editedAndRefreshCards} \n                            setPostBeingEdited = {setPostBeingEdited} setVisibility= {setVisibility} />\n    ))\n\n    function ActionButton(){\n      // everything except the API call is visual only\n      async function handleFollow(e) {\n        setChecked(e.currentTarget.checked);\n        if (text === \"Follow\"){\n          setText(\"Following\");\n          if(isFollowing){setOffset(0);}\n          else{setOffset(1);}\n          const updatedUser = await followUser(stateCurrentUser.username, username);\n          dispatch(updateCurrentUser(updatedUser));\n        }else{\n          setText(\"Follow\");\n          if(isFollowing){setOffset(-1);}\n          else{setOffset(0);}\n          const updatedUser = await unfollowUser(stateCurrentUser.username, username);\n          dispatch(updateCurrentUser(updatedUser));\n        }\n      }\n      \n      if (username === stateCurrentUser.username){\n        return(\n          <NavLink to=\"/upload\"> \n            <Button> New Post </Button>\n          </NavLink>\n          )\n      }else if(stateCurrentUser.username!==\"NOT_A_USER\"){\n          return(\n            <ToggleButton className=\"mb-2\" id=\"toggle-check\" type=\"checkbox\" variant=\"outline-primary\"\n            data-testid=\"followingButton\" checked={checked} onChange={handleFollow}>\n              {text}\n            </ToggleButton>  \n          )\n      }else{\n        return (\n          <NavLink to=\"/login\"> \n            <Button> Login to Follow </Button>\n          </NavLink>\n        )\n      }\n    }\n\n    \n  return (\n    <div className='background'>\n      <div style={{display: 'flex', justifyContent: 'center'}}>\n        <ReactRoundedImage\n          image={thisUser.avatar}\n          roundedColor=\"white\"\n          imageWidth=\"150\"\n          imageHeight=\"150\"\n          roundedSize=\"10\"\n          borderRadius=\"100\"/>\n      </div>\n      <div style={{display: 'flex', justifyContent: 'center', paddingTop: \"1rem\" }}>\n        <p className=\"fw-bold\" data-testid=\"username\"> {thisUser.username} </p>\n      </div>\n      <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n        <Row>\n          <Col> <NavLink to={\"/followinglist/\"+thisUser.username} style={{ textDecoration: \"none\"}}> {thisUser.followings.length} Following </NavLink> </Col>\n          <Col> <NavLink to={\"/followerlist/\"+thisUser.username} style={{ textDecoration: \"none\"}}> {thisUser.followers.length + offset} Followers </NavLink> </Col>\n        </Row>\n      </div>\n\n      <Container>\n          <Col sm={{span : 4, offset: 11}} style={{paddingBottom: '2rem', paddingTop: '2rem'}}>\n            <ActionButton />\n          </Col>\n          <Col sm={15}>\n            <Row> {posts} </Row>\n          </Col>\n      </Container>\n      \n      <PostPopUp className = \"popWindow\" post = {postBeingEdited} \n                 setEditedAndRefreshCards = {setEditedAndRefreshCards} oldEditedAndRefreshCards={editedAndRefreshCards} \n                 setHearFromDeleteComment = {setHearFromDeleteComment} oldHearFromDeleteComment={hearFromDeleteComment}\n                 setPostBeingEdited = {setPostBeingEdited}\n                 onClose={popupCloseHandler} show={visibility}>\n\n          <h1>Hello This is Popup Content Area</h1>\n          <h2>This is my lorem ipsum text here!</h2>\n      </PostPopUp>\n\n\n      <div style={{paddingLeft: \"2rem\"}}>\n          <Footer />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,yBAAyB;AAChD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAAQC,oBAAoB,QAAO,+BAA+B;AAClE,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,OAAO,EAAEC,SAAS,QAAO,kBAAkB;AACpD,SAAQC,iBAAiB,EAAEC,iBAAiB,QAAO,oBAAoB;AACvE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,YAAY,QAAO,eAAe;AAC1E,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,gBAAgB;AAAA;AAEtC,eAAe,SAASC,IAAI,GAAG;EAAA;EAE3B,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B;EACA,MAAMS,gBAAgB,GAAGV,WAAW,CAACF,iBAAiB,CAAC;EACvD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAACuB,gBAAgB,CAAC;EAC1D,MAAM,CAACG,QAAQ,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,IAAI,EAAEC,OAAO,CAAC,GAAGjC,QAAQ,CAAC,QAAQ,CAAC;EAC1C,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACpD,IAAI;IAAEoC;EAAS,CAAC,GAAG1B,SAAS,EAAE;EAC9B;EACA,MAAM,CAAC2B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1E,MAAM,CAACuC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3E;EACA,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,eAAe4C,SAAS,GAAG;MACzB;MACA,IAAIC,OAAO,GAAG,MAAM/B,OAAO,CAACqB,QAAQ,CAAC;MACrC,IAAIW,OAAO,GAAG,MAAM/B,QAAQ,EAAE;MAC7B;MACD,IAAG8B,OAAO,KAAKE,SAAS,EAAC;QACvBC,KAAK,CAAC,iBAAiB,CAAC;MAC1B,CAAC,MAAI;QACHxB,WAAW,CAACqB,OAAO,CAAC;QACpBnB,gBAAgB,CAACoB,OAAO,CAAC,CAAC,CAAC;MAC7B;IACF;;IACA,IAAG;MAACF,SAAS,EAAE;IAAC,CAAC,CACjB,OAAMK,GAAG,EAAC;MACRC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAAC;IAErB,IAAI3B,gBAAgB,CAAC8B,UAAU,CAACC,QAAQ,CAAClB,QAAQ,CAAC,EAAC;MACjDH,OAAO,CAAC,WAAW,CAAC;MACpBF,UAAU,CAAC,KAAK,CAAC;MACjBF,SAAS,CAAC,CAAC,CAAC;MACZM,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAI;MACHF,OAAO,CAAC,QAAQ,CAAC;MACjBF,UAAU,CAAC,IAAI,CAAC;MAChBF,SAAS,CAAC,CAAC,CAAC;MACZM,cAAc,CAAC,KAAK,CAAC;IACvB;;IAEA;IACA,eAAeoB,qBAAqB,GAAE;MAClC;MACEJ,OAAO,CAACK,GAAG,CAAC,2BAA2B,EAAEb,eAAe,CAACc,EAAE,CAAC;MAC5D,MAAMC,WAAW,GAAG,MAAM5D,OAAO,CAAC6D,IAAI,CAACC,SAAS,CAACjB,eAAe,CAAC,KAAI,IAAI,GAAEA,eAAe,CAACc,EAAE,GAAG,CAAC,CAAC,CAAC;MACnGb,kBAAkB,CAACc,WAAW,CAAC;MAC/BP,OAAO,CAACK,GAAG,CAAC,0BAA0B,EAAEb,eAAe,CAACc,EAAE,CAAC;IAEjE;IACA,IAAG;MACD,IAAGE,IAAI,CAACC,SAAS,CAACjB,eAAe,CAAC,KAAI,IAAI,IAAIA,eAAe,EAAE;QAACY,qBAAqB,EAAE;MAAA;MAAC;IAC1F,CAAC,QAAML,GAAG,EAAC;MACTC,OAAO,CAACK,GAAG,CAACN,GAAG,CAAC;MAChBC,OAAO,CAACK,GAAG,CAAC,+CAA+C,CAAC;IAC9D;EAEF,CAAC,EAAE,CAACpB,QAAQ,EAAEC,qBAAqB,EAAEE,qBAAqB,CAAC,CAAC,CAAC,CAAC;;EAG9D,MAAMsB,iBAAiB,GAAG,MAAM;IAC9BnB,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMoB,KAAK,GAAG,CAAEtC,QAAQ,CAACsC,KAAK,CAACC,MAAM,KAAG,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAGvC,QAAQ,CAACsC,KAAK,EAAEE,GAAG,CAAEC,CAAC,iBACxE,QAAC,oBAAoB;IAAC,QAAQ,EAAE1C,gBAAgB,CAACa,QAAS;IAAC,IAAI,EAAEV,QAAQ,CAACwC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKQ,CAAC,CAAC,CAAC,CAAC,CAAE;IAC/E,wBAAwB,EAAI3B,wBAAyB;IAAC,wBAAwB,EAAED,qBAAsB;IACtG,kBAAkB,EAAIO,kBAAmB;IAAC,aAAa,EAAGF;EAAc;IAAA;IAAA;IAAA;EAAA,QAC/F,CAAC;EAEF,SAAS0B,YAAY,GAAE;IACrB;IACA,eAAeC,YAAY,CAACC,CAAC,EAAE;MAC7BvC,UAAU,CAACuC,CAAC,CAACC,aAAa,CAACzC,OAAO,CAAC;MACnC,IAAIE,IAAI,KAAK,QAAQ,EAAC;QACpBC,OAAO,CAAC,WAAW,CAAC;QACpB,IAAGC,WAAW,EAAC;UAACL,SAAS,CAAC,CAAC,CAAC;QAAC,CAAC,MAC1B;UAACA,SAAS,CAAC,CAAC,CAAC;QAAC;QAClB,MAAM2C,WAAW,GAAG,MAAMvD,UAAU,CAACM,gBAAgB,CAACa,QAAQ,EAAEA,QAAQ,CAAC;QACzEd,QAAQ,CAACV,iBAAiB,CAAC4D,WAAW,CAAC,CAAC;MAC1C,CAAC,MAAI;QACHvC,OAAO,CAAC,QAAQ,CAAC;QACjB,IAAGC,WAAW,EAAC;UAACL,SAAS,CAAC,CAAC,CAAC,CAAC;QAAC,CAAC,MAC3B;UAACA,SAAS,CAAC,CAAC,CAAC;QAAC;QAClB,MAAM2C,WAAW,GAAG,MAAMtD,YAAY,CAACK,gBAAgB,CAACa,QAAQ,EAAEA,QAAQ,CAAC;QAC3Ed,QAAQ,CAACV,iBAAiB,CAAC4D,WAAW,CAAC,CAAC;MAC1C;IACF;IAEA,IAAIpC,QAAQ,KAAKb,gBAAgB,CAACa,QAAQ,EAAC;MACzC,oBACE,QAAC,OAAO;QAAC,EAAE,EAAC,SAAS;QAAA,uBACnB,QAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAoB;QAAA;QAAA;QAAA;MAAA,QACnB;IAEd,CAAC,MAAK,IAAGb,gBAAgB,CAACa,QAAQ,KAAG,YAAY,EAAC;MAC9C,oBACE,QAAC,YAAY;QAAC,SAAS,EAAC,MAAM;QAAC,EAAE,EAAC,cAAc;QAAC,IAAI,EAAC,UAAU;QAAC,OAAO,EAAC,iBAAiB;QAC1F,eAAY,iBAAiB;QAAC,OAAO,EAAEN,OAAQ;QAAC,QAAQ,EAAEuC,YAAa;QAAA,UACpErC;MAAI;QAAA;QAAA;QAAA;MAAA,QACQ;IAErB,CAAC,MAAI;MACH,oBACE,QAAC,OAAO;QAAC,EAAE,EAAC,QAAQ;QAAA,uBAClB,QAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA2B;QAAA;QAAA;QAAA;MAAA,QAC1B;IAEd;EACF;EAGF,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB;MAAK,KAAK,EAAE;QAACyC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAQ,CAAE;MAAA,uBACtD,QAAC,iBAAiB;QAChB,KAAK,EAAElD,QAAQ,CAACmD,MAAO;QACvB,YAAY,EAAC,OAAO;QACpB,UAAU,EAAC,KAAK;QAChB,WAAW,EAAC,KAAK;QACjB,WAAW,EAAC,IAAI;QAChB,YAAY,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAClB,eACN;MAAK,KAAK,EAAE;QAACF,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEE,UAAU,EAAE;MAAO,CAAE;MAAA,uBAC3E;QAAG,SAAS,EAAC,SAAS;QAAC,eAAY,UAAU;QAAA,gBAAGpD,QAAQ,CAACY,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACnE,eACN;MAAK,KAAK,EAAE;QAACqC,OAAO,EAAE,MAAM;QAAEI,UAAU,EAAE,QAAQ;QAAEH,cAAc,EAAE;MAAQ,CAAE;MAAA,uBAC5E,QAAC,GAAG;QAAA,wBACF,QAAC,GAAG;UAAA,6BAAE,QAAC,OAAO;YAAC,EAAE,EAAE,iBAAiB,GAAClD,QAAQ,CAACY,QAAS;YAAC,KAAK,EAAE;cAAE0C,cAAc,EAAE;YAAM,CAAE;YAAA,gBAAGtD,QAAQ,CAAC6B,UAAU,CAACU,MAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eACnJ,QAAC,GAAG;UAAA,6BAAE,QAAC,OAAO;YAAC,EAAE,EAAE,gBAAgB,GAACvC,QAAQ,CAACY,QAAS;YAAC,KAAK,EAAE;cAAE0C,cAAc,EAAE;YAAM,CAAE;YAAA,gBAAGtD,QAAQ,CAACuD,SAAS,CAAChB,MAAM,GAAGnC,MAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IACtJ;MAAA;MAAA;MAAA;IAAA,QACF,eAEN,QAAC,SAAS;MAAA,wBACN,QAAC,GAAG;QAAC,EAAE,EAAE;UAACoD,IAAI,EAAG,CAAC;UAAEpD,MAAM,EAAE;QAAE,CAAE;QAAC,KAAK,EAAE;UAACqD,aAAa,EAAE,MAAM;UAAEL,UAAU,EAAE;QAAM,CAAE;QAAA,uBAClF,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACZ,eACN,QAAC,GAAG;QAAC,EAAE,EAAE,EAAG;QAAA,uBACV,QAAC,GAAG;UAAA,gBAAGd,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAChB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eAEZ,QAAC,SAAS;MAAC,SAAS,EAAG,WAAW;MAAC,IAAI,EAAInB,eAAgB;MAChD,wBAAwB,EAAIL,wBAAyB;MAAC,wBAAwB,EAAED,qBAAsB;MACtG,wBAAwB,EAAIG,wBAAyB;MAAC,wBAAwB,EAAED,qBAAsB;MACtG,kBAAkB,EAAIK,kBAAmB;MACzC,OAAO,EAAEiB,iBAAkB;MAAC,IAAI,EAAEpB,UAAW;MAAA,wBAEpD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyC,eACzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0C;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eAGZ;MAAK,KAAK,EAAE;QAACyC,WAAW,EAAE;MAAM,CAAE;MAAA,uBAC9B,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GArKuB7D,IAAI;EAAA,QAEPP,WAAW,EAEHD,WAAW,EAOjBH,SAAS;AAAA;AAAA,KAXRW,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}